name: Push to ECR

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:

  assume_role:
    runs-on: ubuntu-latest
    outputs:
      aws-region: ${{ steps.assume-role.outputs.aws-region }}
    steps:
      - name: Assume IAM role
        id: assume-role
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::109667701036:role/cpcostiota-role
          role-session-name: ecr-push
          aws-region: ap-south-1

  build_and_push:
    runs-on: ubuntu-latest
    needs: assume_role
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Assume IAM role
        id: assume-role
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::109667701036:role/cpcostiota-role
          role-session-name: ecr-push
          aws-region: ap-south-1

      - name: Create Docker directory
        run: mkdir docker

      - name: Move app directory to docker directory
        run: |
          mkdir -p app
          mv ieg_lib_toolkit/ieg_cost/cpcost.py app/
          mv app docker/

      - name: Create Dockerfile
        run: |
          cd docker
          echo "FROM python:3.9-slim" > Dockerfile
          echo "COPY cpcost.py /app/cpcost.py" >> Dockerfile
          echo "WORKDIR /app" >> Dockerfile
          echo "RUN pip install ieg" >> Dockerfile
          echo 'CMD ["python", "cpcost.py"]' >> Dockerfile
          cd ..

      - name: Build Docker image
        run: docker build -t cpcost ./docker

      - name: Push Docker image
        run: |
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 109667701036.dkr.ecr.ap-south-1.amazonaws.com
          docker tag cpcost:latest 109667701036.dkr.ecr.ap-south-1.amazonaws.com/cpcost:latest
          docker push 109667701036.dkr.ecr.ap-south-1.amazonaws.com/cpcost:latest
