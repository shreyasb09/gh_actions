name: ECS

on:
  workflow_dispatch:

jobs:

  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1.7.0
      with:
        aws-region: ap-south-1
        role-to-assume: arn:aws:iam::109667701036:role/cpcostiota-role
        role-session-name: my_repo
        role-duration-seconds: 900
      id: aws-credentials

    - name: Set AWS Session Token
      run: echo "AWS_SESSION_TOKEN=${{ steps.aws-credentials.outputs.aws-session-token }}" >> $GITHUB_ENV

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Build and push Docker image
      env:
        AWS_SESSION_TOKEN: ${{ env.AWS_SESSION_TOKEN }}
        AWS_ROLE_ARN: arn:aws:iam::109667701036:role/cpcostiota-role
      run: |
        # Build stage
        echo "# Build stage" > Dockerfile
        echo "FROM python:3.9-slim as build" >> Dockerfile
        echo "WORKDIR /app" >> Dockerfile
        echo "" >> Dockerfile
        echo "# Install dependencies" >> Dockerfile
        echo "RUN apt-get update && apt-get install -y awscli python3-pip curl && rm -rf /var/lib/apt/lists/*" >> Dockerfile
        echo "" >> Dockerfile
        echo "# Install AWS SDK (Boto3)" >> Dockerfile
        echo "RUN pip install boto3" >> Dockerfile
        echo "" >> Dockerfile
        echo "# Get temporary credentials from the assumed IAM role" >> Dockerfile
        echo "ENV AWS_WEB_IDENTITY_TOKEN_FILE=/aws-web-identity-token" >> Dockerfile
        echo "RUN mkdir /aws-web-identity-token" >> Dockerfile
        echo "RUN aws configure set role_arn \"\$AWS_ROLE_ARN\" --profile assume-role" >> Dockerfile
        echo "RUN aws configure set web_identity_token_file \"/aws-web-identity-token\" --profile assume-role" >> Dockerfile
        echo "RUN aws configure set role_session_name \"cpcostiota-role\" --profile assume-role" >> Dockerfile
        echo "RUN aws sts assume-role --profile assume-role --role-arn \"\$AWS_ROLE_ARN\" --role-session-name \"cpcostiota-role\" --web-identity-token=\"\$(aws sts get-caller-identity --query 'Arn' --output text)\" > /aws-web-identity-token/token" >> Dockerfile
        echo "" >> Dockerfile
        echo "# Get CodeArtifact authorization token" >> Dockerfile
        echo "RUN auth_token=\$(aws codeartifact get-authorization-token --domain amgbeta --domain-owner 109667701036 --query authorizationToken --output text --profile assume-role)" >> Dockerfile
        echo "" >> Dockerfile
        echo "# Configure pip.conf for CodeArtifact" >> Dockerfile
        echo "RUN mkdir -p ~/.pip" >> Dockerfile
        echo "RUN echo \"[global]\" > ~/.pip/pip.conf" >> Dockerfile
        echo "RUN echo \"index-url = https://aws:\${auth_token}@amgbeta-109667701036.d.codeartifact.ap-south-1.amazonaws.com/pypi/ieg/simple/\" >> ~/.pip/pip.conf" >> Dockerfile
        echo "RUN echo \"extra-index-url = https://pypi.org/simple/\" >> ~/.pip/pip.conf" >> Dockerfile
        echo "" >> Dockerfile
        echo "# Install ieg package from CodeArtifact" >> Dockerfile
        echo "RUN pip install ieg==0.1.0" >> Dockerfile
        echo "" >> Dockerfile
        echo "# Copy cpcost.py" >> Dockerfile
        echo "COPY gh_actions/cpcost.py /app/cpcost.py" >> Dockerfile
        echo "" >> Dockerfile
        echo "# Final stage" >> Dockerfile
        echo "FROM python:3.9-slim" >> Dockerfile
        echo "WORKDIR /app" >> Dockerfile
        echo "COPY --from=build /app/cpcost.py /app/cpcost.py" >> Dockerfile
        echo "CMD [\"python\", \"cpcost.py\"]" >> Dockerfile
        
        docker build -t cpcost .
        
        aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 109667701036.dkr.ecr.ap-south-1.amazonaws.com
        docker tag cpcost:latest 109667701036.dkr.ecr.ap-south-1.amazonaws.com/cpcost:latest
        docker push 109667701036.dkr.ecr.ap-south-1.amazonaws.com/cpcost:latest
