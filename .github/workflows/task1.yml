name: Push to ECR

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:

  assume_role:
    runs-on: ubuntu-latest
    outputs:
      aws-region: ${{ steps.assume-role.outputs.aws-region }}
    steps:
      - name: Assume IAM role
        id: assume-role
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::109667701036:role/cpcostiota-role
          role-session-name: ecr-push
          aws-region: ap-south-1

  build_and_push:
    runs-on: ubuntu-latest
    needs: assume_role
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Assume IAM role
        id: assume-role
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::109667701036:role/cpcostiota-role
          role-session-name: ecr-push
          aws-region: ap-south-1

      - name: Create Dockerfile
        run: |
          echo "# Build stage" > Dockerfile
          echo "FROM python:3.9-slim as build" >> Dockerfile
          echo "WORKDIR /app" >> Dockerfile
          echo "" >> Dockerfile
          echo "# Install AWS CLI" >> Dockerfile
          echo "RUN apt-get update && apt-get install -y awscli" >> Dockerfile
          echo "" >> Dockerfile
          echo "# Assume IAM role" >> Dockerfile
          echo "RUN aws configure set aws_access_key_id $(aws sts get-caller-identity --query 'Arn' --output text | cut -f 2 -d '/' | sed 's/://g')" >> Dockerfile
          echo "RUN aws configure set aws_secret_access_key $(aws sts get-caller-identity --query 'SecretAccessKey' --output text)" >> Dockerfile
          echo "RUN aws configure set aws_session_token $(aws sts get-caller-identity --query 'Token' --output text)" >> Dockerfile
          echo "" >> Dockerfile
          echo "# Log in to AWS CodeArtifact" >> Dockerfile
          echo "RUN mkdir -p ~/.pip" >> Dockerfile
          echo "RUN aws codeartifact login --tool pip --repository ieg --domain amgbeta --domain-owner 109667701036 --region ap-south-1" >> Dockerfile
          echo "RUN echo \"[global]\nindex-url = https://aws:${CODEARTIFACT_AUTH_TOKEN}@amgbeta-109667701036.d.codeartifact.ap-south-1.amazonaws.com/pypi/ieg/simple/\nextra-index-url = https://pypi.org/simple/\" > ~/.pip/pip.conf" >> Dockerfile
          echo "" >> Dockerfile
          echo "# Install ieg package" >> Dockerfile
          echo "RUN pip install ieg==0.1.0" >> Dockerfile
          echo "" >> Dockerfile
          echo "# Copy cpcost.py" >> Dockerfile
          echo "COPY gh_actions/cpcost.py /app/cpcost.py" >> Dockerfile
          echo "" >> Dockerfile
          echo "# Final stage" >> Dockerfile
          echo "FROM python:3.9-slim" >> Dockerfile
          echo "WORKDIR /app" >> Dockerfile
          echo "COPY --from=build /app/cpcost.py /app/cpcost.py" >> Dockerfile
          echo "CMD [\"python\", \"cpcost.py\"]" >> Dockerfile

      - name: Build Docker image
        run: docker build -t cpcost .

      - name: Push Docker image
        run: |
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 109667701036.dkr.ecr.ap-south-1.amazonaws.com
          docker tag cpcost:latest 109667701036.dkr.ecr.ap-south-1.amazonaws.com/cpcost:latest
          docker push 109667701036.dkr.ecr.ap-south-1.amazonaws.com/cpcost:latest
